[{"/home/qqtechx/Schichtbuch3/ui/sch2/src/index.js":"1","/home/qqtechx/Schichtbuch3/ui/sch2/src/reportWebVitals.js":"2","/home/qqtechx/Schichtbuch3/ui/sch2/src/App.js":"3","/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseTabs/BaseTabs.js":"4","/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseTable/BaseTable.js":"5","/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BasePagination/BasePagination.js":"6","/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseSearchPage/BaseSearchPage.js":"7","/home/qqtechx/Schichtbuch3/ui/sch2/src/api/index.js":"8","/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseCreatetable/BaseCreatetable.js":"9","/home/qqtechx/Schichtbuch3/ui/sch2/src/utils/index.js":"10","/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseSelect/BaseSelect.js":"11","/home/qqtechx/Schichtbuch3/ui/sch2/src/data/users.js":"12","/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseFileUpload/BaseFileUpload.js":"13","/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseMultiSelect/BaseMultiSelect.js":"14"},{"size":535,"mtime":1709099512000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1709099512000,"results":"17","hashOfConfig":"16"},{"size":1812,"mtime":1722407659840,"results":"18","hashOfConfig":"16"},{"size":3895,"mtime":1709099512000,"results":"19","hashOfConfig":"16"},{"size":18516,"mtime":1720788738979,"results":"20","hashOfConfig":"16"},{"size":1050,"mtime":1709099512000,"results":"21","hashOfConfig":"16"},{"size":8479,"mtime":1722409849544,"results":"22","hashOfConfig":"16"},{"size":1312,"mtime":1709721402209,"results":"23","hashOfConfig":"16"},{"size":14005,"mtime":1722410022322,"results":"24","hashOfConfig":"16"},{"size":1247,"mtime":1709099512000,"results":"25","hashOfConfig":"16"},{"size":514,"mtime":1709099512000,"results":"26","hashOfConfig":"16"},{"size":2020,"mtime":1720788738979,"results":"27","hashOfConfig":"16"},{"size":348,"mtime":1720788738979,"results":"28","hashOfConfig":"16"},{"size":626,"mtime":1709099512000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r59dqi",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/qqtechx/Schichtbuch3/ui/sch2/src/index.js",[],[],"/home/qqtechx/Schichtbuch3/ui/sch2/src/reportWebVitals.js",[],[],"/home/qqtechx/Schichtbuch3/ui/sch2/src/App.js",[],[],"/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseTabs/BaseTabs.js",[],[],"/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseTable/BaseTable.js",["74","75"],[],"import { useState } from 'react';\nimport { Modal, Button, Form, Table, Badge } from 'react-bootstrap';\nimport { Fragment } from 'react';\nimport moment from 'moment';\nimport { timeFormat } from '../../utils/index';\nimport {\n  url,\n  updated,\n  fetchGet,\n  fetchSearch,\n  fetchSort,\n} from '../../api/index';\n\nimport './BaseTable.css';\n\nconst BaseTable = ({\n  data,\n  darkMode,\n  page,\n  setDatLength,\n  setTableData,\n  isSort,\n  setSearchData,\n  searchFetch,\n}) => {\n  const [iconPosDatum, setIconPosDatum] = useState(true);\n  const [iconPosSchicht, setIconPosSchicht] = useState(true);\n  const [iconPosStatus, setIconPosStatus] = useState(true);\n  const [iconPosPartnr, setIconPosPartnr] = useState(true);\n  const [iconPosPartname, setIconPosPartname] = useState(true);\n  const [iconPosMa, setIconPosMa] = useState(true);\n  const [iconPosMashine, setIconPosMashine] = useState(true);\n  const [show, setShow] = useState(false);\n  const [noteComment, setNoteComment] = useState('');\n\n  const [itemId, setItemId] = useState('');\n  const [comments, setComments] = useState([]);\n\n  const noteClass = 'text-success my-2';\n\n  const statusColor = (status) => {\n    if (status === 'info') {\n      return '';\n    } else if (status === 'anweisung') {\n      return 'warning';\n    } else {\n      return 'danger';\n    }\n  };\n\n  // const data = [\n  //   {\n  //     date: '2021-09-01T07:00:00.000Z',\n  //     status: 'info',\n  //     partnr: '123456',\n  //     partname: 'Test',\n  //     ma: 'T s',\n  //     machine: ['Test'],\n  //     notes: [{ note: 'Test' }],\n  //     image: 'test.jpg',\n  //   },\n  // ]\n\n  const handleClose = (str) => {\n    setShow(false);\n    if (str === 'save') {\n      if (noteComment === '' || noteComment.length < 3) {\n        return;\n      }\n      const FormData = require('form-data');\n      const noteData = new FormData();\n      noteData.append('notes', noteComment);\n      updated(itemId, noteData).then((res) => {\n        console.log(res);\n        if (res.status === 200) {\n          setNoteComment('');\n          console.log(res.data)\n          fetchGet(page).then((res) => {\n            console.log(res)\n            setTableData(res.data.items);\n            setDatLength(res.data.length);\n          });\n          fetchSearch(...searchFetch).then((res) => {\n            console.log(res.data)\n            setSearchData(res?.data?.items);\n          });\n        }\n      });\n    } else {\n      setNoteComment('');\n    }\n  };\n\n  const handleShow = (id, com) => {\n    setShow(true);\n    setItemId(id);\n    setComments(com);\n  };\n\n  const dateDay = (date) => {\n    if (moment(date).format('dddd') === 'Monday') return 'Mo';\n    if (moment(date).format('dddd') === 'Tuesday') return 'Di';\n    if (moment(date).format('dddd') === 'Wednesday') return 'Mi';\n    if (moment(date).format('dddd') === 'Thursday') return 'Do';\n    if (moment(date).format('dddd') === 'Friday') return 'Fr';\n    if (moment(date).format('dddd') === 'Saturday') return 'Sa';\n    if (moment(date).format('dddd') === 'Sunday') return 'So';\n  };\n\n  const onDate = (date) => {\n    return moment(date).format('DD.MM.YYYY');\n  };\n  const onHour = (date) => {\n    return moment(date).format('HH:mm');\n  };\n\n  const onToUpperCase = (str) => {\n    if(str === 'storung_mit_ausfall') {\n      return 'Störung \\n mit Ausfall';\n    } else if (str === 'storung_ohne_ausfall') {\n      return 'Störung \\n ohne Ausfall';\n    } else if (str === 'qualitatsabweichung') {\n      return 'Qualitäts- \\n abweichung';\n    }\n    return str\n      .split('')\n      .map((item, i) => (i === 0 ? item.toUpperCase() : item))\n      .join('');\n  };\n\n  const handelSort = (str) => {\n    if (str === 'datum') {\n      setIconPosDatum(!iconPosDatum);\n      fetchSort(page, 'date', iconPosDatum ? 'asc' : 'desc').then((res) =>\n        setTableData(res?.data?.items)\n      );\n    }\n    if (str === 'schicht') {\n      setIconPosSchicht(!iconPosSchicht);\n      if (iconPosSchicht) {\n        data.sort((a, b) => {\n          if (timeFormat(onHour(a.date)) > timeFormat(onHour(b.date))) {\n            return -1;\n          }\n          if (timeFormat(onHour(a.date)) < timeFormat(onHour(b.date))) {\n            return 1;\n          }\n          return 0;\n        });\n      } else {\n        data.sort((a, b) => {\n          if (timeFormat(onHour(a.date)) > timeFormat(onHour(b.date))) {\n            return 1;\n          }\n          if (timeFormat(onHour(a.date)) < timeFormat(onHour(b.date))) {\n            return -1;\n          }\n          return 0;\n        });\n      }\n    }\n    if (str === 'status') {\n      setIconPosStatus(!iconPosStatus);\n      fetchSort(page, 'status', iconPosStatus ? 'desc' : 'asc').then((res) =>\n        setTableData(res?.data?.items)\n      );\n    }\n    if (str === 'partnr') {\n      setIconPosPartnr(!iconPosPartnr);\n      fetchSort(page, 'partnr', iconPosPartnr ? 'desc' : 'asc').then((res) =>\n        setTableData(res?.data?.items)\n      );\n    }\n    if (str === 'partname') {\n      setIconPosPartname(!iconPosPartname);\n      fetchSort(page, 'partname', iconPosPartname ? 'desc' : 'asc').then((res) =>\n        setTableData(res?.data?.items)\n      );\n    }\n    if (str === 'ma') {\n      setIconPosMa(!iconPosMa);\n      fetchSort(page, 'ma', iconPosMa ? 'desc' : 'asc').then((res) =>\n        setTableData(res?.data?.items)\n      );\n    }\n    if (str === 'mashine') {\n      setIconPosMashine(!iconPosMashine);\n      fetchSort(page, 'machine', iconPosMashine ? 'desc' : 'asc').then((res) =>\n        setTableData(res?.data?.items)\n      );\n    }\n  };\n\n  return (\n    <div style={{ overflow: 'auto' }}>\n      <Table\n        variant={`${darkMode ? 'dark' : 'with'}`}\n        className=\"my-3 border border-white\"\n        responsive=\"sm\"\n        striped\n        bordered\n        hover\n      >\n        <thead className=\"bg_table_header text-white\">\n          <tr>\n            <th>\n              <div className=\"d-flex align-items-center justify-content-between\">\n                <span>Datum</span>\n                {isSort ? (\n                  <span\n                    role=\"button\"\n                    onClick={() => handelSort('datum')}\n                    className={`d-flex align-items-center ${\n                      iconPosDatum ? 'icon_position' : ''\n                    }`}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      fill=\"currentColor\"\n                      className=\"bi bi-triangle-fill\"\n                      viewBox=\"0 0 16 16\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M7.022 1.566a1.13 1.13 0 0 1 1.96 0l6.857 11.667c.457.778-.092 1.767-.98 1.767H1.144c-.889 0-1.437-.99-.98-1.767L7.022 1.566z\"\n                      />\n                    </svg>\n                  </span>\n                ) : null}\n              </div>\n            </th>\n            <th>\n              <div\n                className=\"d-flex align-items-center justify-content-between\"\n                style={{ widows: '100%' }}\n              >\n                <span>Uhrzeit</span>\n              </div>\n            </th>\n            <th>\n              <div className=\"d-flex align-items-center justify-content-between\">\n                <span>Schicht</span>\n                {isSort ? (\n                  <span\n                    role=\"button\"\n                    onClick={() => handelSort('schicht')}\n                    className={`d-flex align-items-center ${\n                      iconPosSchicht ? 'icon_position' : ''\n                    }`}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      fill=\"currentColor\"\n                      className=\"bi bi-triangle-fill\"\n                      viewBox=\"0 0 16 16\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M7.022 1.566a1.13 1.13 0 0 1 1.96 0l6.857 11.667c.457.778-.092 1.767-.98 1.767H1.144c-.889 0-1.437-.99-.98-1.767L7.022 1.566z\"\n                      />\n                    </svg>\n                  </span>\n                ) : null}\n              </div>\n            </th>\n            <th width=\"100\">\n              <div className=\"d-flex align-items-center justify-content-between\">\n                <span>Status</span>\n                {isSort ? (\n                  <span\n                    role=\"button\"\n                    onClick={() => handelSort('status')}\n                    className={`d-flex align-items-center ${\n                      iconPosStatus ? 'icon_position' : ''\n                    }`}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      fill=\"currentColor\"\n                      className=\"bi bi-triangle-fill\"\n                      viewBox=\"0 0 16 16\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M7.022 1.566a1.13 1.13 0 0 1 1.96 0l6.857 11.667c.457.778-.092 1.767-.98 1.767H1.144c-.889 0-1.437-.99-.98-1.767L7.022 1.566z\"\n                      />\n                    </svg>\n                  </span>\n                ) : null}\n              </div>\n            </th>\n            <th>\n              <div className=\"d-flex align-items-center justify-content-between\">\n                <span>Artikelnr</span>\n                {isSort ? (\n                  <span\n                    role=\"button\"\n                    onClick={() => handelSort('partnr')}\n                    className={`d-flex align-items-center ${\n                      iconPosPartnr ? 'icon_position' : ''\n                    }`}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      fill=\"currentColor\"\n                      className=\"bi bi-triangle-fill\"\n                      viewBox=\"0 0 16 16\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M7.022 1.566a1.13 1.13 0 0 1 1.96 0l6.857 11.667c.457.778-.092 1.767-.98 1.767H1.144c-.889 0-1.437-.99-.98-1.767L7.022 1.566z\"\n                      />\n                    </svg>\n                  </span>\n                ) : null}\n              </div>\n            </th>\n            <th>\n              <div className=\"d-flex align-items-center justify-content-between\">\n                <span>Artikelname</span>\n                {isSort ? (\n                  <span\n                    role=\"button\"\n                    onClick={() => handelSort('partname')}\n                    className={`d-flex align-items-center ${\n                      iconPosPartname ? 'icon_position' : ''\n                    }`}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      fill=\"currentColor\"\n                      className=\"bi bi-triangle-fill\"\n                      viewBox=\"0 0 16 16\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M7.022 1.566a1.13 1.13 0 0 1 1.96 0l6.857 11.667c.457.778-.092 1.767-.98 1.767H1.144c-.889 0-1.437-.99-.98-1.767L7.022 1.566z\"\n                      />\n                    </svg>\n                  </span>\n                ) : null}\n              </div>\n            </th>\n            <th>\n              <div className=\"d-flex align-items-center justify-content-between\">\n                <span>MA</span>\n              </div>\n            </th>\n            <th>\n              <div className=\"d-flex align-items-center justify-content-between\">\n                <span>Ausstattung</span>\n              </div>\n            </th>\n            <th className=\"width-not\">Notiz</th>\n            <th>Feedback</th>\n            <th>Bild</th>\n          </tr>\n        </thead>\n        <tbody className={darkMode ? 'bg_tbody-dark' : 'bg_tbody'}>\n          {data.map((item, i) => {\n            return item !== undefined ? (\n              <Fragment key={item?.date + i}>\n                <tr className={i % 2 === 0 ? 'bg_table_body' : ''}>\n                  <td style={{ width: '140px' }}>\n                    {dateDay(item.date)}, {onDate(item.date)}\n                  </td>\n                  <td>{onHour(item.date)}</td>\n                  <td>{timeFormat(onHour(item.date))}</td>\n\t\t  <td className={`bg-${statusColor(item?.status)}`} style={{whiteSpace: 'pre-line', minWidth: '130px'}}>\n                    {onToUpperCase(item.status)}\n                  </td>\n                  <td className='' style={{maxWidth:'30ch', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'}}>\n\t\t\t{item.partnr && item.partname != 'undefined' && `${String(item.partnr).slice(0, 16)}`}\n                  </td>\n\n                  <td className='' style={{maxWidth:'30ch', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'}}>\n\t\t\t{item.partname && item.partname != 'undefined' && `${String(item.partname).slice(0, 39)}`}\n                  </td>\n\n                  <td>{item.ma.toUpperCase().replace(/\\s+/g, '')}</td>\n                  <td>\n                    {item.machine.map((mach, i) => {\n                      return (\n                        <span className=\"mx-1 fs-5\" key={mach + i}>\n                          <Badge bg=\"secondary\">{mach}</Badge>\n                        </span>\n                      );\n                    })}\n                  </td>\n                  {/* item?.notes?.length - 1 */}\n                  <td className=\"width-not\">{item?.notes[0]?.note}</td>\n                  <td>\n                    <div className=\"d-flex flex-row justify-content-center\">\n                      <span\n                        onClick={() => handleShow(item?.id, item.notes)}\n                        className={`cursor_pointer mx-2 text-${\n                          darkMode ? 'white' : 'dark'\n                        }`}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"20\"\n                          height=\"20\"\n                          fill=\"currentColor\"\n                          className=\"bi bi-chat-text\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path d=\"M2.678 11.894a1 1 0 0 1 .287.801 10.97 10.97 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8.06 8.06 0 0 0 8 14c3.996 0 7-2.807 7-6 0-3.192-3.004-6-7-6S1 4.808 1 8c0 1.468.617 2.83 1.678 3.894zm-.493 3.905a21.682 21.682 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a9.68 9.68 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105z\" />\n                          <path d=\"M4 5.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zM4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8zm0 2.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5z\" />\n                        </svg>\n                      </span>\n                      ({item?.notes?.length})\n                    </div>\n                  </td>\n                  <td className=\"\">\n                    <div className=\"d-flex justify-content-center align-items-center\">\n                      {item?.image ? (\n                        <a\n                          className={darkMode ? 'text-white' : 'text-dark'}\n                          href={url + item.image}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"20\"\n                            height=\"20\"\n                            fill=\"currentColor\"\n                            className=\"bi bi-image\"\n                            viewBox=\"0 0 16 16\"\n                          >\n                            <path d=\"M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\n                            <path d=\"M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z\" />\n                          </svg>\n                        </a>\n                      ) : (\n                        '-'\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              </Fragment>\n            ) : null;\n          })}\n        </tbody>\n      </Table>\n      <Modal show={show} onHide={handleClose} scrollable={true} size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title>Notiz</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <ul className=\"ul_style\">\n              {comments.map((item, i) => {\n                return (\n                  <li\n                    key={item.created_at + i}\n                    className={i % 2 === 0 ? noteClass : ''}\n                  >\n                    <Badge className=\"ms-2 me-2 py-2 px-2\" bg=\"secondary\">\n                      {moment(item.created_at).format('DD.MM.YYYY, HH:mm')}\n                    </Badge>\n                    {item.note}\n                  </li>\n                );\n              })}\n            </ul>\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Title id=\"example-custom-modal-styling-title\">\n          <div className=\"px-4 py-2\">\n            <Form.Control\n              placeholder=\"Feedback\"\n              onChange={(e) => setNoteComment(e.target.value)}\n              value={noteComment}\n              as=\"textarea\"\n              rows={2}\n            />\n          </div>\n        </Modal.Title>\n        <Modal.Footer className=\"d-flex justify-content-center\">\n          <Button variant=\"secondary\" onClick={() => handleClose('cancel')}>\n            Abbruch\n          </Button>\n          <Button variant=\"primary\" onClick={() => handleClose('save')}>\n            Speichern\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default BaseTable;\n","/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BasePagination/BasePagination.js",[],[],"/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseSearchPage/BaseSearchPage.js",["76"],[],"import { useState, useEffect } from 'react';\nimport { Table, Form } from 'react-bootstrap';\nimport BaseSelect from '../BaseSelect/BaseSelect';\nimport { machine, statusData } from '../../data/users';\nimport { fetchGetMa, fetchSearch } from '../../api/index';\nimport BaseTable from '../BaseTable/BaseTable';\n\nimport './BaseSearchPage.css';\n\n// const shiftFilter = ['F1', 'S2', 'N3']\nconst statusFilter = statusData;\n// const machineFilter = machine.map((item, i) => item.name);\n\nfunction BaseSearchPage({ darkMode, setTableData, setDatLength }) {\n  const [isVisible, setIsVisible] = useState(true);\n  const [maFilter, setMaFilter] = useState([]);\n  const [searchData, setSearchData] = useState([]);\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [toArticle, setToArticle] = useState('');\n\n  const [machineFilter, setMachineFilter] = useState([]);\n\n  useEffect(() => {\n    fetch('http://192.168.100.23:7878/api/machines')\n      .then((res) => res.json())\n      .then((data) => {\n        setMachineFilter(data.map((item) => item.machineQrCode));\n      });\n\n  }, []);\n\n  // partnr\n  // const [timeFormatSelect, setTimeFormatSelect] = useState('')\n  const [statusSelect, setStatusSelect] = useState('');\n  const [maSelect, setMaSelect] = useState('');\n  const [machineSelect, setMachineSelect] = useState('');\n\n  const handleSelectStatus = (e) => {\n    const status = statusFilter.find((item) => item.name === e);\n    e !== 'Wählen' ? setStatusSelect(status.id) : setStatusSelect('');\n  }\n\n  const handleSelectMa = (e) =>\n    e !== 'Wählen' ? setMaSelect(e) : setMaSelect('');\n\n  const handleSelectMachine = (e) =>\n    e !== 'Wählen' ? setMachineSelect(e) : setMachineSelect('');\n\n  // if(action === 'schicht') setTimeFormatSelect(e)\n\n  const handleFromDate = (e) => {\n    setFromDate(e.target.value);\n  };\n  const handleToDate = (e) => {\n    setToDate(e.target.value);\n  };\n  const handleToArticle = (e) => {\n    setToArticle(e.target.value);\n  };\n\n\n\n  const handleSubmit = () => {\n    if (fromDate || toDate || toArticle || statusSelect || maSelect || machineSelect || toArticle ) {\n      fetchSearch(fromDate, toDate, toArticle, statusSelect, maSelect, machineSelect).then(\n        (res) => {\n          setSearchData(res?.data?.items);\n        }\n      );\n    } else {\n      setSearchData([]);\n    }\n  };\n\n  const resetValues = () => {\n    setFromDate('');\n    setToDate('');\n    setToArticle('');\n    setStatusSelect('');\n    setMaSelect('');\n    setMachineSelect('');\n\n    setIsVisible(false);\n    setTimeout(() => {\n      setIsVisible(true);\n    });\n\n    setSearchData([]);\n  };\n\n  useEffect(() => {\n    if (!(fromDate || toDate || toArticle || statusSelect || maSelect || machineSelect)) {\n      setSearchData([]);\n    }\n  }, [fromDate, toDate, toArticle , statusSelect, maSelect, machineSelect]);\n\n  useEffect(() => {\n    fetchGetMa().then((res) => {\n      console.log('res', res);\n      setMaFilter(res.data.ma);\n    });\n  }, []);\n\n  return (\n    <div>\n      {isVisible && (\n        <Table className=\"my-4\" striped bordered>\n          <tbody className={`${darkMode ? 'search_page-dark' : 'search_page'}`}>\n            <tr>\n              <td>\n                <div className=\"d-flex align-items-center date_picker\">\n                  <p\n                    className={`fs-5 my-0 px-2 py-1 search_page-text fw-bold bg-transparent text-${\n                      darkMode ? 'white' : ''\n                    }`}\n                  >\n                    Datum von:\n                  </p>\n                  <Form.Control\n                    onChange={(e) => handleFromDate(e)}\n                    size=\"sm\"\n                    className=\"ms-2 w-50\"\n                    type=\"date\"\n                  />\n                </div>\n              </td>\n              <td>\n                <div className=\"d-flex align-items-center date_picker\">\n                  <p\n                    className={`fs-5 my-0 px-2 py-1 search_page-text fw-bold bg-transparent text-${\n                      darkMode ? 'white' : ''\n                    }`}\n                  >\n                    Datum bis:\n                  </p>\n                  <Form.Control\n                    onChange={(e) => handleToDate(e)}\n                    size=\"sm\"\n                    className=\"ms-2 w-50\"\n                    type=\"date\"\n                  />\n                </div>\n              </td>\n              <td>\n                <div className=\"d-flex align-items-center date_picker\">\n                  <p\n                    className={`fs-5 my-0 px-2 py-1 search_page-text fw-bold bg-transparent text-${\n                      darkMode ? 'white' : ''\n                    }`}\n                  >\n                    Artikelnummer:\n                  </p>\n                  <Form.Control\n                    onChange={(e) => handleToArticle(e)}\n                    size=\"sm\"\n                    className=\"ms-2 w-50\"\n                    type=\"text\"\n                  />\n                </div>\n              </td>\n            </tr>\n            <tr>\n                {/* <td className='search_page-text' >\n                              <div className='d-flex align-items-center' >\n                                  <p className={`my-0 me-2 px-2 py-1 fw-bold text-${darkMode ? 'white' : ''}`} >Schicht:</p>\n                                  <BaseSelect select={(e) => handleSelect(e, 'schicht')} size='sm' options={shiftFilter} />\n                              </div>\n                          </td> */}\n\n              <td className=\"search_page-text\">\n\n                <div className=\"d-flex align-items-center\">\n                  <p\n                    className={`fs-5 my-0 me-2 px-2 py-1 fw-bold text-${\n                      darkMode ? 'white' : ''\n                    }`}\n                  >\n                    Status:\n                  </p>\n                  <BaseSelect\n                    select={(e) => handleSelectStatus(e)}\n                    size=\"sm\"\n                    options={statusFilter.map((item) => item.name)}\n                  />\n                </div>\n              </td>\n              <td className=\"search_page-text\">\n                <div className=\"d-flex align-items-center\">\n                  <p\n                    className={`fs-5 my-0 me-2 px-2 py-1 fw-bold text-${\n                      darkMode ? 'white' : ''\n                    }`}\n                  >\n                    MA:\n                  </p>\n                  <BaseSelect\n                    select={(e) => handleSelectMa(e)}\n                    size=\"sm\"\n                    options={maFilter}\n                  />\n                </div>\n              </td>\n              <td className=\"search_page-text\">\n                <div className=\"d-flex align-items-center\">\n                  <p\n                    className={`fs-5 my-0 me-2 px-2 py-1 fw-bold text-${\n                      darkMode ? 'white' : ''\n                    }`}\n                  >\n                    Ausstattung:\n                  </p>\n                  <BaseSelect\n                    select={(e) => handleSelectMachine(e)}\n                    size=\"sm\"\n                    options={machineFilter}\n                  />\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      )}\n      {searchData.length > 0 ? (\n        <BaseTable\n          darkMode={darkMode}\n          setDatLength={setDatLength}\n          setTableData={setTableData}\n          data={searchData}\n          setSearchData={setSearchData}\n          searchFetch={[\n            fromDate,\n            toDate,\n            toArticle,\n            statusSelect,\n            maSelect,\n            machineSelect,\n          ]}\n        />\n      ) : null}\n      <div className=\"d-flex justify-content-end\">\n        <button\n          onClick={resetValues}\n          className={`mx-3 fw-bold ${\n            darkMode ? 'reset_btn-dark' : 'reset_btn'\n          }`}\n          disabled={\n            !(fromDate || toDate  || toArticle || statusSelect || maSelect || machineSelect)\n          }\n        >\n          Suche zurücksetzen\n        </button>\n        <button\n          onClick={handleSubmit}\n          className={`fw-bold ${darkMode ? 'search_btn-dark' : 'search_btn'}`}\n          disabled={\n            !(fromDate || toDate || toArticle || statusSelect || maSelect || machineSelect)\n          }\n        >\n          Suchen..\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default BaseSearchPage;\n","/home/qqtechx/Schichtbuch3/ui/sch2/src/api/index.js",[],[],"/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseCreatetable/BaseCreatetable.js",[],[],"/home/qqtechx/Schichtbuch3/ui/sch2/src/utils/index.js",[],[],"/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseSelect/BaseSelect.js",[],[],"/home/qqtechx/Schichtbuch3/ui/sch2/src/data/users.js",[],[],"/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseFileUpload/BaseFileUpload.js",[],[],"/home/qqtechx/Schichtbuch3/ui/sch2/src/components/BaseMultiSelect/BaseMultiSelect.js",[],[],{"ruleId":"77","severity":1,"message":"78","line":383,"column":34,"nodeType":"79","messageId":"80","endLine":383,"endColumn":36},{"ruleId":"77","severity":1,"message":"78","line":387,"column":36,"nodeType":"79","messageId":"80","endLine":387,"endColumn":38},{"ruleId":"81","severity":1,"message":"82","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":17},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'machine' is defined but never used.","Identifier","unusedVar"]